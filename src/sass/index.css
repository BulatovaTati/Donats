@charset "UTF-8";
.container {
  width: 100%;
  margin: 0 auto;
}
@media only screen and (min-width: 320px) {
  .container {
    width: 320px;
    padding: 0 20px;
  }
}
@media only screen and (min-width: 768px) {
  .container {
    width: 768px;
    padding: 0 32px;
  }
}
@media only screen and (min-width: 1280px) {
  .container {
    width: 1280px;
    padding: 0 15px;
  }
}

@media only screen and (min-width: 320px) {
  .section {
    padding: 30px 0;
  }
}
@media only screen and (min-width: 768px) {
  .section {
    padding: 40px 0;
  }
}
@media only screen and (min-width: 1280px) {
  .section {
    padding: 60px 0;
  }
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul {
  margin: 0;
  padding: 0;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

.visually-hidden {
  position: absolute;
  white-space: nowrap;
  width: 1px;
  height: 1px;
  overflow: hidden;
  border: 0;
  padding: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  margin: -1px;
}

body {
  background-color: #FFFFFF;
}

body.modal-open,
body.is-open {
  overflow: hidden;
}

/* Стили для подложки */
.overlay {
  /* Скрываем подложку  */
  opacity: 0;
  visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 145, 173, 0.502);
  z-index: 20;
  transition: 0.3s all;
}

/* Стили для модальных окон */
.modal {
  /* Скрываем окна  */
  opacity: 0;
  visibility: hidden;
  /*  Установаем ширину окна  */
  width: 100%;
  max-width: 500px;
  max-height: 99vh;
  /*  Центрируем и задаем z-index */
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 999;
  /* Должен быть выше чем у подложки*/
  /*  Побочные стили   */
  box-shadow: 0 3px 10px -0.5px rgba(0, 0, 0, 0.2);
  text-align: center;
  padding: 30px;
  border-radius: 3px;
  background-color: #fff;
  transition: 0.3s all;
  overflow-y: auto;
}

/* Стили для активных классов подложки и окна */
.modal.active,
.overlay.active {
  opacity: 1;
  visibility: visible;
}

/* Стили для кнопки закрытия */
.modal__cross {
  width: 15px;
  height: 15px;
  position: absolute;
  top: 20px;
  right: 20px;
  fill: #444;
  cursor: pointer;
}

#background-wrap {
  bottom: 0;
  left: 0;
  padding-top: 50px;
  position: fixed;
  right: 0;
  top: 0;
  z-index: -1;
  display: none;
}

.overlay.js-overlay-modal.active #background-wrap {
  display: block;
}

/* KEYFRAMES */
@-webkit-keyframes animateCloud {
  0% {
    margin-left: -1000px;
  }
  100% {
    margin-left: 100%;
  }
}
@-moz-keyframes animateCloud {
  0% {
    margin-left: -1000px;
  }
  100% {
    margin-left: 100%;
  }
}
@keyframes animateCloud {
  0% {
    margin-left: -1000px;
  }
  100% {
    margin-left: 100%;
  }
}
/* ANIMATIONS */
.x1 {
  animation: animateCloud 35s linear infinite;
  transform: scale(0.65);
}

.x2 {
  animation: animateCloud 20s linear infinite;
  transform: scale(0.3);
}

.x3 {
  animation: animateCloud 30s linear infinite;
  transform: scale(0.5);
}

.x4 {
  animation: animateCloud 18s linear infinite;
  transform: scale(0.4);
}

.x5 {
  animation: animateCloud 25s linear infinite;
  transform: scale(0.55);
}

/* OBJECTS */
.cloud {
  background: #FFFFFF;
  border-radius: 100px;
  box-shadow: 0 8px 5px rgba(0, 0, 0, 0.1);
  height: 120px;
  position: relative;
  width: 350px;
}

.cloud:after,
.cloud:before {
  background: #FFFFFF;
  content: "";
  position: absolute;
  z-indeX: -1;
}

.cloud:after {
  border-radius: 100px;
  height: 100px;
  left: 50px;
  top: -50px;
  width: 100px;
}

.cloud:before {
  border-radius: 200px;
  width: 180px;
  height: 180px;
  right: 50px;
  top: -90px;
}/*# sourceMappingURL=index.css.map */