{"mappings":"AAAA,ICAUA,ECAYC,SAASC,cAAc,yBAE/BC,iBAAiB,SAASC,IACxBA,EAAEC,OAOEC,QAEhBL,SAASC,cAAc,qBAAqBK,UAAW,EAGvDN,SAASC,cAAc,qBAAqBK,UAAW,KFb3D,IAFYN,SAASO,iBAAiB,UAE3BC,SAASC,IAClBA,EAAKP,iBAAkB,SAAS,WAC9BO,EAAKC,UAAUC,OAAO,oBGJzB,MACC,MAAMC,EAAO,CACXC,aAAcb,SAASO,iBAAiB,6BACxCO,cAAed,SAASC,cAAc,8BACtCc,MAAOf,SAASC,cAAc,yBAEhC,IAAIe,GAAU,EAMd,SAASC,IACPL,EAAKG,MAAML,UAAUC,OAAO,aAC5BX,SAASkB,KAAKR,UAAUC,OAAO,sBAC/BK,EACIhB,SAASkB,KAAKC,oBAAoB,UAAWC,GAC7CpB,SAASkB,KAAKhB,iBAAiB,UAAWkB,GAC9CJ,GAAWA,EAUb,SAASI,EAAUC,GACF,WAAfA,EAAMC,KAAoBL,IAAgBM,KArB5CX,EAAKC,aAAaL,SAAQgB,GAAMA,EAAGtB,iBAAiB,QAASe,KAC7DL,EAAKE,cAAcZ,iBAAiB,QAASe,GAC7CL,EAAKG,MAAMb,iBAAiB,SAW5B,SAAyBmB,GACvB,GAAIA,EAAMjB,QAAUiB,EAAMI,cACxB,OAEFR,QAzBH,GFAY,mBAAHlB,EAA6X2B,OAAOC,QAAQC,WAApXC,UAAU9B,EAAE8B,QAAQ9B,EAAE+B,mBAAmB/B,EAAEgC,oBAAoBhC,EAAEiC,uBAAuB,SAAS7B,GAAG,IAAI,IAAI8B,EAAEC,KAAKC,GAAGF,EAAEjC,UAAUiC,EAAEG,eAAe7B,iBAAiBJ,GAAGkC,EAAE,EAAEF,EAAEE,IAAIF,EAAEE,KAAKJ,KAAKI,EAAE,OAAOC,QAAQH,EAAEE,MAAM,mBAAmBtC,EAAEwC,UAAUxC,EAAEwC,QAAQ,SAASpC,GAAG,IAAI,IAAI8B,EAAEC,KAAKD,GAAG,IAAIA,EAAEO,UAAU,CAAC,GAAGP,EAAEJ,QAAQ1B,GAAG,OAAO8B,EAAEA,EAAEA,EAAEQ,WAAW,OAAO,OAG/XzC,SAASE,iBAAiB,oBAAoB,W,kDAIvCwC,EAAe1C,SAASC,cAAiB,qBACzC0C,EAAuB3C,SAACO,iBAAc,mBAI1CqC,EAAApC,SAA8B,SACRqC,GAEnBA,EAAA3C,iBAAA,kBACIC,G,yDASaH,SAAKC,cAAa,sBAChB6C,EAAS,M,wBAMMJ,EAARhC,UAAVqC,IAAJ,UACsB/C,SAATkB,KAALR,UAAVqC,IAAJ,oBAMkCJ,EAAbnC,SAAR,SAATqC,GAE2BA,EAAL3C,iBAAjB,SAAT,SAATC,GACmB+B,KAALK,QAAR,UAEmB7B,UAAVsC,OAAP,UAC6BN,EAARhC,UAAVsC,OAAP,UACyBhD,SAATkB,KAALR,UAAVsC,OAAP,oBAMoChD,SAATkB,KAALhB,iBAAjB,SAAT,SAAAC,GAGyB,IAFCA,EAAF8C,UAIQjD,SAATC,cAAd,iBAAXS,UAAUsC,OAAO,UACiBhD,SAATC,cAAd,YAAZS,UAAMsC,OAAO,cAE2B,GAGGN,EAARxC,iBAAjB,SAAT,WAC8BF,SAATC,cAAd,iBAAjBS,UAAQsC,OAAO,UAC0Bd,KAALxB,UAAVsC,OAAP,UACoBhD,SAATkB,KAALR,UAAVsC,OAAP,oBGlERtB,OAAOwB,SAAW,IAClB,WACE,MAAMC,EAASnD,SAASC,cAAc,kBAChCmD,EAAgB,GACH1B,OAAO2B,YACTD,EACbD,EAAOzC,UAAUsC,OAAO,kBAExBG,EAAOzC,UAAUqC,IAAI,kBARHO","sources":["src/js/flip-card.js","src/js/modal.js","src/js/agreement.js","src/js/menu.js","src/js/to-top.js"],"sourcesContent":["var cards = document.querySelectorAll('.card');\n\n[...cards].forEach((card)=>{\n  card.addEventListener( 'click', function() {\n    card.classList.toggle('is-flipped');\n  });\n});","!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n         document.body.classList.add('modal-open');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n         document.body.classList.remove('modal-open');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n       this.classList.remove('active');\n         document.body.classList.remove('modal-open');\n    });\n\n\n\n\n}); // end ready","const termsCheckBox = document.querySelector('[data-modal-checkbox]');\n\ntermsCheckBox.addEventListener('click', e => {\n  terms_changed(e.target);\n});\n\n//JavaScript function that enables or disables a submit button depending\n//on whether a checkbox has been ticked or not.\nfunction terms_changed(termsCheckBox) {\n  //If the checkbox has been checked\n  if (termsCheckBox.checked) {\n    //Set the disabled property to FALSE and enable the button.\n    document.querySelector('[data-submit-btn]').disabled = false;\n  } else {\n    //Otherwise, disable the submit button.\n    document.querySelector('[data-submit-btn]').disabled = true;\n  }\n}","(() => {\n  const refs = {\n    openModalBtn: document.querySelectorAll('[data-open-modal__window]'),\n    closeModalBtn: document.querySelector('[data-close-modal__window]'),\n    modal: document.querySelector('[data-modal__window]'),\n  };\n  let isShown = false;\n\n  refs.openModalBtn.forEach(el => el.addEventListener('click', toggleModal));\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n  refs.modal.addEventListener('click', onBackdropClick);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n    document.body.classList.toggle('js-modal-is-hidden');\n    isShown\n      ? document.body.removeEventListener('keydown', onKeyDown)\n      : document.body.addEventListener('keydown', onKeyDown);\n    isShown = !isShown;\n  }\n\n  function onBackdropClick(event) {\n    if (event.target != event.currentTarget) {\n      return;\n    }\n    toggleModal();\n  }\n\n  function onKeyDown(event) {\n    event.code === 'Escape' ? toggleModal() : none;\n  }\n})();"," window.onscroll = () => changeScrollButtonVisibility();\n function changeScrollButtonVisibility() {\n   const button = document.querySelector(\".scroll-to-top\");\n   const offsetTrigger = 60;\n   const pageOffset = window.pageYOffset;\n   if (pageOffset > offsetTrigger) {\n       button.classList.remove('js-transparent');\n     } else {\n       button.classList.add(\"js-transparent\");\n   }\n }"],"names":["e1","document","querySelector","addEventListener","e","target","checked","disabled","querySelectorAll","forEach","card","classList","toggle","refs","openModalBtn","closeModalBtn","modal","isShown","toggleModal","body","removeEventListener","onKeyDown","event","code","none","el","currentTarget","window","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","this","o","ownerDocument","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","item","modalId","add","remove","keyCode","onscroll","button","offsetTrigger","pageYOffset","$3b654a7bdb477c40$var$changeScrollButtonVisibility"],"version":3,"file":"index.9c3631c2.js.map"}